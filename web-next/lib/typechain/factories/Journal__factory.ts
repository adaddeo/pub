/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Journal, JournalInterface } from "../Journal";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "submissionId",
        type: "uint256",
      },
    ],
    name: "InvalidSubmissionId",
    type: "error",
  },
  {
    inputs: [],
    name: "IssueAlreadyPublished",
    type: "error",
  },
  {
    inputs: [],
    name: "PermissionDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "SubmissionFeeNotPaid",
    type: "error",
  },
  {
    inputs: [],
    name: "SubmissionsClosed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "publicationId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "issueId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_submissionIds",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "string",
        name: "data",
        type: "string",
      },
    ],
    name: "IssuePublished",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "publicationId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "issueId",
        type: "uint256",
      },
    ],
    name: "NewIssue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "publicationId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "title",
        type: "string",
      },
    ],
    name: "NewPublication",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "publicationId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "issueId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "submissionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "content",
        type: "string",
      },
    ],
    name: "NewSubmission",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_publicationId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_submissionsOpenBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_submissionsCloseBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_submissionFee",
        type: "uint256",
      },
    ],
    name: "createIssue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "createPublication",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_publicationId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_issueId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "content",
        type: "string",
      },
    ],
    name: "createSubmission",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_publicationId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_issueId",
        type: "uint256",
      },
    ],
    name: "issueRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_publicationId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_issueId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_submissionIds",
        type: "uint256[]",
      },
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
    ],
    name: "publishIssue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_publicationId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_issueId",
        type: "uint256",
      },
    ],
    name: "submissionFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_publicationId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_issueId",
        type: "uint256",
      },
    ],
    name: "submissionsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610ac48061007e6000396000f3fe6080604052600436106100915760003560e01c8063ab31a03311610059578063ab31a03314610159578063c7128cd714610179578063f1403b16146101b7578063f2fde38b146101d7578063f37a8f1c146101f757600080fd5b806323ec26d714610096578063715018a6146100ab57806388d9c89f146100c05780638da5cb5b14610111578063aab96d7f14610139575b600080fd5b6100a96100a436600461077e565b610235565b005b3480156100b757600080fd5b506100a9610347565b3480156100cc57600080fd5b506100fe6100db3660046107d1565b600091825260026020818152604080852093855292909101905290206006015490565b6040519081526020015b60405180910390f35b34801561011d57600080fd5b506000546040516001600160a01b039091168152602001610108565b34801561014557600080fd5b506100a96101543660046107f3565b61035b565b34801561016557600080fd5b506100a9610174366004610825565b610406565b34801561018557600080fd5b506100fe6101943660046107d1565b600091825260026020818152604080852093855292909101905290206005015490565b3480156101c357600080fd5b506100a96101d2366004610867565b610480565b3480156101e357600080fd5b506100a96101f236600461091b565b610612565b34801561020357600080fd5b506100fe6102123660046107d1565b600091825260026020818152604080852093855292909101905290206004015490565b600084815260026020818152604080842087855292830190915290912060018101544310806102675750806002015443115b15610285576040516307be465960e41b815260040160405180910390fd5b806004015434146102a957604051631750423b60e01b815260040160405180910390fd5b600681018054600091826102bc83610961565b909155506000818152600784016020526040812080546001600160a01b0319163317815560058501805493945090923492906102f990849061097c565b9250508190555086887fd1014531c81681bec67778100b563c200d496725d19b73064fe586df20fc48f0848989604051610335939291906109bd565b60405180910390a35050505050505050565b61034f61068b565b61035960006106e5565b565b61036361068b565b600084815260026020526040902080546001600160a01b0316331461038757600080fd5b6001810180546000918261039a83610961565b90915550600081815260028481016020908152604092839020600181018a90559182018890556004820187905591518381529293509188917fda30336bda9904dd16dd2e9f390674e3f7d4fba37e85c71f1908fed8142b9154910160405180910390a250505050505050565b600180546000918261041783610961565b909155506000818152600260205260409081902080546001600160a01b0319163317815590519192509082907f862efd97586c7c2d9179befe2a00eb2ea7e5b782392b97bdd6fb002f876f47189061047290879087906109e0565b60405180910390a250505050565b600086815260026020526040902080546001600160a01b031633146104b857604051630782484160e21b815260040160405180910390fd5b600086815260028201602052604090206003810154156104eb57604051635630b19560e01b815260040160405180910390fd5b4260038201558460005b818110156105c75760008360070160008a8a85818110610517576105176109fc565b6020908102929092013583525081019190915260400160002080549091506001600160a01b031661058057888883818110610554576105546109fc565b9050602002013560405163024ada6f60e61b815260040161057791815260200190565b60405180910390fd5b8284600501546105909190610a12565b81546001600160a01b0316600090815260036020526040812080549091906105b990849061097c565b9091555050506001016104f5565b5087897f34bfdd5568ffeae52545e024b9f3d8d99d0d8f8c2095449128ffb8a2ed70c370898989896040516105ff9493929190610a34565b60405180910390a3505050505050505050565b61061a61068b565b6001600160a01b03811661067f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610577565b610688816106e5565b50565b6000546001600160a01b031633146103595760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610577565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008083601f84011261074757600080fd5b50813567ffffffffffffffff81111561075f57600080fd5b60208301915083602082850101111561077757600080fd5b9250929050565b6000806000806060858703121561079457600080fd5b8435935060208501359250604085013567ffffffffffffffff8111156107b957600080fd5b6107c587828801610735565b95989497509550505050565b600080604083850312156107e457600080fd5b50508035926020909101359150565b6000806000806080858703121561080957600080fd5b5050823594602084013594506040840135936060013592509050565b6000806020838503121561083857600080fd5b823567ffffffffffffffff81111561084f57600080fd5b61085b85828601610735565b90969095509350505050565b6000806000806000806080878903121561088057600080fd5b8635955060208701359450604087013567ffffffffffffffff808211156108a657600080fd5b818901915089601f8301126108ba57600080fd5b8135818111156108c957600080fd5b8a60208260051b85010111156108de57600080fd5b6020830196508095505060608901359150808211156108fc57600080fd5b5061090989828a01610735565b979a9699509497509295939492505050565b60006020828403121561092d57600080fd5b81356001600160a01b038116811461094457600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b60006000198214156109755761097561094b565b5060010190565b6000821982111561098f5761098f61094b565b500190565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b8381526040602082015260006109d7604083018486610994565b95945050505050565b6020815260006109f4602083018486610994565b949350505050565b634e487b7160e01b600052603260045260246000fd5b600082610a2f57634e487b7160e01b600052601260045260246000fd5b500490565b6040808252810184905260006001600160fb1b03851115610a5457600080fd5b8460051b80876060850137808301905060608101600081526060848303016020850152610a82818688610994565b9897505050505050505056fea2646970667358221220f94a8d4a2b66c41e54a45c8428ae3c1f3dc6dffdd77444b8dce7491e75c8d3b964736f6c634300080a0033";

type JournalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JournalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Journal__factory extends ContractFactory {
  constructor(...args: JournalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Journal> {
    return super.deploy(overrides || {}) as Promise<Journal>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Journal {
    return super.attach(address) as Journal;
  }
  override connect(signer: Signer): Journal__factory {
    return super.connect(signer) as Journal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JournalInterface {
    return new utils.Interface(_abi) as JournalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Journal {
    return new Contract(address, _abi, signerOrProvider) as Journal;
  }
}
